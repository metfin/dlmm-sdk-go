// Code generated by https://github.com/gagliardetto/anchor-go. DO NOT EDIT.
// This file contains constants.

package lb_clmm

import "math/big"

// Constants defined in the IDL:

const BASIS_POINT_MAX = int32(10000)

var BIN_ARRAY = []byte{98, 105, 110, 95, 97, 114, 114, 97, 121}
var BIN_ARRAY_BITMAP_SEED = []byte{98, 105, 116, 109, 97, 112}

const BIN_ARRAY_BITMAP_SIZE = int32(512)

var CLAIM_PROTOCOL_FEE_OPERATOR = []byte{99, 102, 95, 111, 112, 101, 114, 97, 116, 111, 114}

const DEFAULT_BIN_PER_POSITION = uint64(0x46)
const EXTENSION_BINARRAY_BITMAP_SIZE = uint64(0xc)
const FEE_PRECISION = uint64(0x3b9aca00)

// Host fee. 20%
const HOST_FEE_BPS = uint16(0x7d0)
const ILM_PROTOCOL_SHARE = uint16(0x7d0)

// Maximum base fee, base_fee / 10^9 = fee_in_percentage
var MAX_BASE_FEE = func() *big.Int {
	val, ok := new(big.Int).SetString("100000000", 10)
	if !ok {
		panic("invalid u128 constant MAX_BASE_FEE")
	}
	return val
}()

// Maximum bin ID supported. Computed based on 1 bps.
const MAX_BIN_ID = int32(443636)
const MAX_BIN_PER_ARRAY = uint64(0x46)

// Maximum bin step
const MAX_BIN_STEP = uint16(0x190)

// Maximum fee rate. 10%
const MAX_FEE_RATE = uint64(0x5f5e100)

// Maximum protocol share of the fee. 25%
const MAX_PROTOCOL_SHARE = uint16(0x9c4)
const MAX_RESIZE_LENGTH = uint64(0x46)
const MAX_REWARD_BIN_SPLIT = uint64(0xf)
const MAX_REWARD_DURATION = uint64(0x1e13380)

var MINIMUM_LIQUIDITY = func() *big.Int {
	val, ok := new(big.Int).SetString("1000000", 10)
	if !ok {
		panic("invalid u128 constant MINIMUM_LIQUIDITY")
	}
	return val
}()

// Minimum base fee
var MIN_BASE_FEE = func() *big.Int {
	val, ok := new(big.Int).SetString("100000", 10)
	if !ok {
		panic("invalid u128 constant MIN_BASE_FEE")
	}
	return val
}()

// Minimum bin ID supported. Computed based on 1 bps.
const MIN_BIN_ID = int32(-443636)
const MIN_REWARD_DURATION = uint64(0x1)
const NUM_REWARDS = uint64(0x2)

var ORACLE = []byte{111, 114, 97, 99, 108, 101}
var POSITION = []byte{112, 111, 115, 105, 116, 105, 111, 110}

const POSITION_MAX_LENGTH = uint64(0x578)

var PRESET_PARAMETER = []byte{112, 114, 101, 115, 101, 116, 95, 112, 97, 114, 97, 109, 101, 116, 101, 114}
var PRESET_PARAMETER2 = []byte{112, 114, 101, 115, 101, 116, 95, 112, 97, 114, 97, 109, 101, 116, 101, 114, 50}

const PROTOCOL_SHARE = uint16(0x1f4)
